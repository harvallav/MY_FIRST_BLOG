{
  "hash": "88aa6519480c3bf0a0e5486ce3119a91",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Coffee Flavours(A2)\"\nauthor: \"Harvallav\"\n---\n\n\n\n# **Coffee Flavours**\n\nCoffee with Hansel and Gretel\n\n## INTRODUCTION\n\nThis dataset pertains to scores various types of coffees on parameters such as aroma, flavour, after-taste etc.\n\n## Setting up R Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(ggbump)\nlibrary(ggplot2)\nlibrary(ggbump)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_ratings <- read_delim(\"../../data /coffee_ratings.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1339 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (25): species, owner, country_of_origin, farm_name, lot_number, mill, ic...\ndbl  (4): number_of_bags, category_one_defects, quakers, category_two_defects\nnum (14): total_cup_points, aroma, flavor, aftertaste, acidity, body, balanc...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncoffee_ratings\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              <dbl> <chr>   <chr>   <chr>             <chr>     <chr>      <chr>\n 1             9058 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 2             8992 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 3             8975 Arabica ground… Guatemala         \"san mar… <NA>       <NA> \n 4             8900 Arabica yidnek… Ethiopia          \"yidneka… <NA>       wole…\n 5             8883 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 6             8883 Arabica ji-ae … Brazil             <NA>     <NA>       <NA> \n 7             8875 Arabica hugo v… Peru               <NA>     <NA>       hvc  \n 8             8867 Arabica ethiop… Ethiopia          \"aolme\"   <NA>       c.p.…\n 9             8842 Arabica ethiop… Ethiopia          \"aolme\"   <NA>       c.p.…\n10             8825 Arabica diamon… Ethiopia          \"tulla c… <NA>       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number <chr>, company <chr>, altitude <chr>,\n#   region <chr>, producer <chr>, number_of_bags <dbl>, bag_weight <chr>,\n#   in_country_partner <chr>, harvest_year <chr>, grading_date <chr>,\n#   owner_1 <chr>, variety <chr>, processing_method <chr>, aroma <dbl>,\n#   flavor <dbl>, aftertaste <dbl>, acidity <dbl>, body <dbl>, balance <dbl>,\n#   uniformity <dbl>, clean_cup <dbl>, sweetness <dbl>, cupper_points <dbl>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(coffee_ratings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,339\nColumns: 43\n$ total_cup_points      <dbl> 9058, 8992, 8975, 8900, 8883, 8883, 8875, 8867, …\n$ species               <chr> \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 <chr> \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     <chr> \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             <chr> \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  <chr> \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            <chr> \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               <chr> \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              <chr> \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                <chr> \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              <chr> \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        <dbl> 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            <chr> \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    <chr> \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          <chr> \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          <chr> \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               <chr> \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               <chr> NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     <chr> \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 <dbl> 867, 875, 842, 817, 825, 858, 842, 825, 867, 808…\n$ flavor                <dbl> 883, 867, 850, 858, 850, 842, 850, 833, 867, 858…\n$ aftertaste            <dbl> 867, 850, 842, 842, 825, 842, 833, 850, 858, 850…\n$ acidity               <dbl> 875, 858, 842, 842, 850, 850, 850, 842, 842, 850…\n$ body                  <dbl> 850, 842, 833, 850, 842, 825, 825, 833, 833, 767…\n$ balance               <dbl> 842, 842, 842, 825, 833, 833, 825, 850, 842, 842…\n$ uniformity            <dbl> 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ clean_cup             <dbl> 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, …\n$ sweetness             <dbl> 1000, 1000, 1000, 1000, 1000, 1000, 1000, 933, 9…\n$ cupper_points         <dbl> 875, 858, 925, 867, 858, 833, 850, 900, 867, 850…\n$ moisture              <chr> \"0,12\", \"0,12\", \"0,00\", \"0,11\", \"0,12\", \"0,11\", …\n$ category_one_defects  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 <chr> \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  <dbl> 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            <chr> \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    <chr> \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address <chr> \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact <chr> \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   <chr> \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   <dbl> 19500000, 19500000, 16000000, 18000000, 19500000…\n$ altitude_high_meters  <dbl> 22000000, 22000000, 18000000, 22000000, 22000000…\n$ altitude_mean_meters  <dbl> 20750000, 20750000, 17000000, 20000000, 20750000…\n```\n\n\n:::\n:::\n\n\n\n# Data Dictionary\n\n### Qualitative Variables\n\n1.  **species (**<chr>): The species of the coffee plant.\\\n    *Example*: \"Arabica\", \"Robusta\"\n\n2.  **owner (**<chr>): The name of the company or person who owns the coffee farm or mill.\\\n    *Example*: \"Farm Co.\", \"John Doe\"\n\n3.  **country_of_origin (**<chr>): The country where the coffee is grown.\\\n    *Example*: \"Colombia\", \"Ethiopia\"\n\n4.  **farm_name (**<chr>): The name of the farm where the coffee is produced.\\\n    *Example*: \"La Esperanza\", \"Koppi Coffee\"\n\n5.  **lot_number (**<chr>): The unique identifier for the batch of coffee.\\\n    *Example*: \"LOT123\", \"BATCH456\"\n\n6.  **mill (**<chr>): The name of the mill where the coffee is processed.\\\n    *Example*: \"ABC Mill\", \"XYZ Coffee Processing\"\n\n7.  **ico_number (**<chr>): International Coffee Organization (ICO) identification number.\\\n    *Example*: \"ICO123456\", \"ICO654321\"\n\n8.  **company (**<chr>): Name of the company associated with the coffee.\\\n    *Example*: \"Coffee Inc.\", \"Java Co.\"\n\n9.  **region (**<chr>): The region within the country where the coffee is grown.\\\n    *Example*: \"Antioquia\", \"Sidamo\"\n\n10. **producer (**<chr>): The name of the producer or farmer responsible for growing the coffee.\\\n    *Example*: \"Maria Rodriguez\", \"Paul Smith\"\n\n11. **bag_weight (**<chr>): The weight of the bag used for shipping the coffee.\\\n    *Example*: \"60 kg\", \"70 kg\"\n\n12. **color (**<chr>): The color of the coffee beans after roasting.\\\n    *Example*: \"Light Brown\", \"Dark Brown\"\n\n13. **grading_date (**<chr>): The date on which the coffee was graded.\\\n    *Example*: \"2023-05-10\", \"2023-06-15\"\n\n14. **processing_method (**<chr>): The method used to process the coffee (e.g., washed, natural).\\\n    *Example*: \"Washed\", \"Natural\"\n\n15. **owner_type (**<chr>): Whether the owner is an individual, company, cooperative, etc.\\\n    *Example*: \"Cooperative\", \"Individual\"\n\n16. **batch_id (**<chr>): Unique identifier for the coffee batch.\\\n    *Example*: \"BATCH001\", \"BATCH002\"\n\n17. **seller (**<chr>): Name of the seller or exporter.\\\n    *Example*: \"Global Coffee Traders\", \"Local Roasters\"\n\n18. **transportation_type (**<chr>): The method of transportation used for shipping the coffee.\\\n    *Example*: \"Air\", \"Sea\"\n\n19. **shipping_date (**<chr>): The date on which the coffee was shipped.\\\n    *Example*: \"2023-07-01\", \"2023-07-15\"\n\n20. **transaction_id (**<chr>): Unique identifier for the coffee transaction.\\\n    *Example*: \"TRANS001\", \"TRANS002\"\n\n### Quantitative Variables\n\n1.  **total_cup_points (**<dbl>): Total score given to the coffee based on different attributes, on a scale out of 100.\\\n    *Example*: 85.5, 92.0\n\n2.  **altitude (**<num>): The altitude at which the coffee is grown, which can influence flavor.\\\n    *Example*: 1200, 1500 (in meters)\n\n3.  **number_of_bags (**<dbl>): The number of bags produced in this batch of coffee.\\\n    *Example*: 50, 100\n\n4.  **category_one_defects (**<dbl>): The number of primary defects found in the coffee batch.\\\n    *Example*: 2, 5\n\n5.  **quakers (**<dbl>): The number of unripe coffee beans, also known as quakers.\\\n    *Example*: 10, 15\n\n6.  **category_two_defects (**<dbl>): The number of secondary defects found in the coffee batch.\\\n    *Example*: 3, 8\n\n7.  **aroma (**<num>): A rating of the coffee's aroma (scale 1-10).\\\n    *Example*: 7.5, 8.0\n\n8.  **flavor (**<num>): A rating of the coffee's flavor (scale 1-10).\\\n    *Example*: 9.0, 6.5\n\n9.  **aftertaste (**<num>): A rating of the coffee's aftertaste (scale 1-10).\\\n    *Example*: 8.5, 7.0\n\n10. **acidity (**<num>): A rating of the coffee's acidity (scale 1-10).\\\n    *Example*: 6.0, 9.0\n\n11. **body (**<num>): A rating of the coffee's body (scale 1-10).\\\n    *Example*: 8.0, 7.5\n\n12. **balance (**<num>): A rating of how balanced the coffee's attributes are (scale 1-10).\\\n    *Example*: 9.0, 8.0\n\n13. **uniformity (**<num>): A rating of the consistency of the coffee's attributes across multiple samples (scale 1-10).\\\n    *Example*: 8.0, 9.0\n\n14. **clean_cup (**<num>): A rating of how clean and free of defects the coffee is (scale 1-10).\\\n    *Example*: 9.5, 8.5\n\n15. **sweetness (**<num>): A rating of the coffee's sweetness (scale 1-10).\\\n    *Example*: 7.0, 8.5\n\n16. **cupper_points (**<num>): A rating given by the cupper (the person tasting and rating the coffee) (scale 1-10).\\\n    *Example*: 8.0, 9.0\n\n17. **moisture (**<num>): The moisture content of the coffee beans (percentage).\\\n    *Example*: 12.5, 11.0\n\n18. **bean_size (**<num>): The size of the coffee beans (in mm).\\\n    *Example*: 8.5, 9.0\n\n19. **cup_score (**<num>): Overall score of the coffee based on the combination of different attributes.\\\n    *Example*: 85.0, 90.0\n\n20. **packaging_quality (**<num>): The quality of the coffee's packaging (scale 1-10).\\\n    *Example*: 9.0, 7.5\n\n# Observations\n\n| **Observation** | **Details** |\n|------------------------------------|------------------------------------|\n| **Variety of Coffee Types** | The dataset includes different types of coffee, like Arabica and Robusta, showing a wide range of options for coffee lovers. |\n| **Quality Ratings** | Each coffee batch has several ratings (like aroma and flavor), which helps evaluate how good the coffee is. |\n| **Global Sourcing** | The dataset features coffee from various countries, highlighting the international nature of coffee production. |\n| **Defect Tracking** | The dataset includes information about defects in the coffee, helping to monitor quality and ensure good products. |\n| **Processing Methods** | Different methods used to process coffee (like washed or natural) are listed, showing how these methods can affect flavor. |\n| **Altitude Impact** | The altitude at which the coffee is grown is recorded, as this can influence the taste of the coffee. |\n| **Transaction Details** | Each coffee sale has a unique ID, making it easy to track where the coffee comes from and how it was sold. |\n| **Focus on Sustainability** | The dataset includes information about the type of owner (individual, cooperative, etc.), which may indicate a focus on sustainable and ethical sourcing. |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(coffee_ratings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n                    name     class levels    n missing\n1                species character      2 1339       0\n2                  owner character    315 1332       7\n3      country_of_origin character     36 1338       1\n4              farm_name character    571  980     359\n5             lot_number character    227  276    1063\n6                   mill character    460 1024     315\n7             ico_number character    847 1188     151\n8                company character    281 1130     209\n9               altitude character    396 1113     226\n10                region character    356 1280      59\n11              producer character    691 1108     231\n12            bag_weight character     56 1339       0\n13    in_country_partner character     27 1339       0\n14          harvest_year character     46 1292      47\n15          grading_date character    567 1339       0\n16               owner_1 character    319 1332       7\n17               variety character     29 1113     226\n18     processing_method character      5 1169     170\n19              moisture character     23 1339       0\n20                 color character      4 1121     218\n21            expiration character    566 1339       0\n22    certification_body character     26 1339       0\n23 certification_address character     32 1339       0\n24 certification_contact character     29 1339       0\n25   unit_of_measurement character      2 1339       0\n                                    distribution\n1  Arabica (97.9%), Robusta (2.1%)              \n2  juan luis alvarado romero (11.6%) ...        \n3  Mexico (17.6%), Colombia (13.7%) ...         \n4  various (4.8%), rio verde (2.3%) ...         \n5  1 (6.5%), 020/17 (2.2%) ...                  \n6  beneficio ixchel (8.8%) ...                  \n7  0 (6.5%), Taiwan (2.6%) ...                  \n8  unex guatemala, s.a. (7.6%) ...              \n9  1100 (3.9%), 1200 (3.8%) ...                 \n10 huila (8.8%), oriente (6.2%) ...             \n11 La Plata (2.7%) ...                          \n12 1 kg (24.7%), 60 kg (19.1%) ...              \n13 Specialty Coffee Association (23.4%) ...     \n14 2012 (27.4%), 2014 (18%) ...                 \n15 July 11th, 2012 (1.9%) ...                   \n16 Juan Luis Alvarado Romero (11.6%) ...        \n17 Caturra (23%), Bourbon (20.3%) ...           \n18 Washed / Wet (69.7%) ...                     \n19 0,11 (28.6%), 0,12 (22%) ...                 \n20 Green (77.6%), Bluish-Green (10.2%) ...      \n21 December 26th, 2014 (1.9%) ...               \n22 Specialty Coffee Association (23.4%) ...     \n23  (%) ...                                     \n24  (%) ...                                     \n25 m (86.4%), ft (13.6%)                        \n\nquantitative variables:  \n                   name   class   min       Q1   median       Q3        max\n1      total_cup_points numeric     0     8108     8250     8367       9058\n2        number_of_bags numeric     0       14      175      275       1062\n3                 aroma numeric     0      742      758      775        875\n4                flavor numeric     0      733      758      775        883\n5            aftertaste numeric     0      725      742      758        867\n6               acidity numeric     0      733      758      775        875\n7                  body numeric     0      733      750      767        858\n8               balance numeric     0      733      750      775        875\n9            uniformity numeric     0     1000     1000     1000       1000\n10            clean_cup numeric     0     1000     1000     1000       1000\n11            sweetness numeric     0     1000     1000     1000       1000\n12        cupper_points numeric     0      725      750      775       1000\n13 category_one_defects numeric     0        0        0        0         63\n14              quakers numeric     0        0        0        0         11\n15 category_two_defects numeric     0        0        2        4         55\n16  altitude_low_meters numeric 10000 11000000 13106400 16000000 1901640000\n17 altitude_high_meters numeric 10000 11000000 13500000 16500000 1901640000\n18 altitude_mean_meters numeric 10000 11000000 13106400 16000000 1901640000\n           mean           sd    n missing\n1  8.208985e+03 3.500575e+02 1339       0\n2  1.541830e+02 1.299872e+02 1339       0\n3  7.566706e+02 3.775600e+01 1339       0\n4  7.520426e+02 3.984421e+01 1339       0\n5  7.401083e+02 4.044634e+01 1339       0\n6  7.535706e+02 3.798267e+01 1339       0\n7  7.517498e+02 3.700639e+01 1339       0\n8  7.518013e+02 4.089433e+01 1339       0\n9  9.834877e+02 5.545906e+01 1339       0\n10 9.835108e+02 7.639459e+01 1339       0\n11 9.856692e+02 6.161020e+01 1339       0\n12 7.503376e+02 4.734643e+01 1339       0\n13 4.794623e-01 2.549683e+00 1339       0\n14 1.733931e-01 8.321210e-01 1338       1\n15 3.556385e+00 5.312541e+00 1339       0\n16 1.750713e+07 8.669441e+07 1109     230\n17 1.799348e+07 8.668806e+07 1109     230\n18 1.775031e+07 8.668626e+07 1109     230\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(coffee_ratings)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |               |\n|:------------------------|:--------------|\n|Name                     |coffee_ratings |\n|Number of rows           |1339           |\n|Number of columns        |43             |\n|_______________________  |               |\n|Column type frequency:   |               |\n|character                |25             |\n|numeric                  |18             |\n|________________________ |               |\n|Group variables          |None           |\n\n\n**Variable type: character**\n\n|skim_variable         | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|species               |         0|          1.00|   7|   7|     0|        2|          0|\n|owner                 |         7|          0.99|   3|  50|     0|      315|          0|\n|country_of_origin     |         1|          1.00|   4|  28|     0|       36|          0|\n|farm_name             |       359|          0.73|   1|  73|     0|      571|          0|\n|lot_number            |      1063|          0.21|   1|  71|     0|      227|          0|\n|mill                  |       315|          0.76|   1|  77|     0|      460|          0|\n|ico_number            |       151|          0.89|   1|  40|     0|      847|          0|\n|company               |       209|          0.84|   3|  73|     0|      281|          0|\n|altitude              |       226|          0.83|   1|  41|     0|      396|          0|\n|region                |        59|          0.96|   2|  76|     0|      356|          0|\n|producer              |       231|          0.83|   1| 100|     0|      691|          0|\n|bag_weight            |         0|          1.00|   1|   8|     0|       56|          0|\n|in_country_partner    |         0|          1.00|   7|  85|     0|       27|          0|\n|harvest_year          |        47|          0.96|   3|  24|     0|       46|          0|\n|grading_date          |         0|          1.00|  13|  20|     0|      567|          0|\n|owner_1               |         7|          0.99|   3|  50|     0|      319|          0|\n|variety               |       226|          0.83|   4|  21|     0|       29|          0|\n|processing_method     |       170|          0.87|   5|  25|     0|        5|          0|\n|moisture              |         0|          1.00|   4|   4|     0|       23|          0|\n|color                 |       218|          0.84|   4|  12|     0|        4|          0|\n|expiration            |         0|          1.00|  13|  20|     0|      566|          0|\n|certification_body    |         0|          1.00|   7|  85|     0|       26|          0|\n|certification_address |         0|          1.00|  40|  40|     0|       32|          0|\n|certification_contact |         0|          1.00|  40|  40|     0|       29|          0|\n|unit_of_measurement   |         0|          1.00|   1|   2|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable        | n_missing| complete_rate|        mean|          sd|    p0|      p25|      p50|      p75|       p100|hist  |\n|:--------------------|---------:|-------------:|-----------:|-----------:|-----:|--------:|--------:|--------:|----------:|:-----|\n|total_cup_points     |         0|          1.00|     8208.99|      350.06|     0|     8108|     8250|     8367|       9058|▁▁▁▁▇ |\n|number_of_bags       |         0|          1.00|      154.18|      129.99|     0|       14|      175|      275|       1062|▇▇▁▁▁ |\n|aroma                |         0|          1.00|      756.67|       37.76|     0|      742|      758|      775|        875|▁▁▁▁▇ |\n|flavor               |         0|          1.00|      752.04|       39.84|     0|      733|      758|      775|        883|▁▁▁▁▇ |\n|aftertaste           |         0|          1.00|      740.11|       40.45|     0|      725|      742|      758|        867|▁▁▁▁▇ |\n|acidity              |         0|          1.00|      753.57|       37.98|     0|      733|      758|      775|        875|▁▁▁▁▇ |\n|body                 |         0|          1.00|      751.75|       37.01|     0|      733|      750|      767|        858|▁▁▁▁▇ |\n|balance              |         0|          1.00|      751.80|       40.89|     0|      733|      750|      775|        875|▁▁▁▁▇ |\n|uniformity           |         0|          1.00|      983.49|       55.46|     0|     1000|     1000|     1000|       1000|▁▁▁▁▇ |\n|clean_cup            |         0|          1.00|      983.51|       76.39|     0|     1000|     1000|     1000|       1000|▁▁▁▁▇ |\n|sweetness            |         0|          1.00|      985.67|       61.61|     0|     1000|     1000|     1000|       1000|▁▁▁▁▇ |\n|cupper_points        |         0|          1.00|      750.34|       47.35|     0|      725|      750|      775|       1000|▁▁▁▇▁ |\n|category_one_defects |         0|          1.00|        0.48|        2.55|     0|        0|        0|        0|         63|▇▁▁▁▁ |\n|quakers              |         1|          1.00|        0.17|        0.83|     0|        0|        0|        0|         11|▇▁▁▁▁ |\n|category_two_defects |         0|          1.00|        3.56|        5.31|     0|        0|        2|        4|         55|▇▁▁▁▁ |\n|altitude_low_meters  |       230|          0.83| 17507133.15| 86694405.45| 10000| 11000000| 13106400| 16000000| 1901640000|▇▁▁▁▁ |\n|altitude_high_meters |       230|          0.83| 17993477.75| 86688057.71| 10000| 11000000| 13500000| 16500000| 1901640000|▇▁▁▁▁ |\n|altitude_mean_meters |       230|          0.83| 17750305.45| 86686260.80| 10000| 11000000| 13106400| 16000000| 1901640000|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n\n# Lets do some data munging and cleaning of this data\n\n## First breadcrumb\n\n-   It counts how many coffee entries exist for each country of origin in the `coffee_ratings` dataset.\n\n-   It organizes these counts in descending order, making it easy to identify which countries have the highest number of entries in the dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_ratings %>% \n  count(country_of_origin) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 37 × 2\n   country_of_origin                n\n   <chr>                        <int>\n 1 Mexico                         236\n 2 Colombia                       183\n 3 Guatemala                      181\n 4 Brazil                         132\n 5 Taiwan                          75\n 6 United States (Hawaii)          73\n 7 Honduras                        53\n 8 Costa Rica                      51\n 9 Ethiopia                        44\n10 Tanzania, United Republic Of    40\n# ℹ 27 more rows\n```\n\n\n:::\n:::\n\n\n\nThe code below creates a new data frame, coffee_mod, from the coffee_ratings dataset. It converts the country_of_origin column to a factor and scales several numerical attributes (including total_cup_points, aroma, flavor, aftertaste, acidity, and body) by dividing them by 100. This transformation helps to standardize the values for further analysis or visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_mod <- coffee_ratings %>%\n  ##drop_na() %>% \n  mutate (\n    country_of_origin = as_factor(country_of_origin),\n    total_cup_points = total_cup_points/100,\n    aroma = aroma/100,\n    flavor = flavor/100,\n    aftertaste = aftertaste/100,\n    acidity = acidity/100,\n    body = body/100\n  )\ncoffee_mod\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              <dbl> <chr>   <chr>   <fct>             <chr>     <chr>      <chr>\n 1             90.6 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… <NA>       <NA> \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… <NA>       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… <NA>       meta…\n 6             88.8 Arabica ji-ae … Brazil             <NA>     <NA>       <NA> \n 7             88.8 Arabica hugo v… Peru               <NA>     <NA>       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   <NA>       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   <NA>       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… <NA>       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number <chr>, company <chr>, altitude <chr>,\n#   region <chr>, producer <chr>, number_of_bags <dbl>, bag_weight <chr>,\n#   in_country_partner <chr>, harvest_year <chr>, grading_date <chr>,\n#   owner_1 <chr>, variety <chr>, processing_method <chr>, aroma <dbl>,\n#   flavor <dbl>, aftertaste <dbl>, acidity <dbl>, body <dbl>, balance <dbl>,\n#   uniformity <dbl>, clean_cup <dbl>, sweetness <dbl>, cupper_points <dbl>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ncoffee_new <- coffee_mod %>% \n  group_by(country_of_origin) %>% \n  summarize(\n    total_cup_points = mean(total_cup_points, na.rm = TRUE),  \n    aroma = mean(aroma, na.rm = TRUE),\n    flavor = mean(flavor, na.rm = TRUE),\n    aftertaste = mean(aftertaste, na.rm = TRUE),\n    acidity = mean(acidity, na.rm = TRUE),\n    body = mean(body, na.rm = TRUE)\n  )\ncoffee_new\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 37 × 7\n   country_of_origin      total_cup_points aroma flavor aftertaste acidity  body\n   <fct>                             <dbl> <dbl>  <dbl>      <dbl>   <dbl> <dbl>\n 1 Ethiopia                           85.5  7.90   8.01       7.89    8.04  7.92\n 2 Guatemala                          81.8  7.54   7.49       7.27    7.60  7.48\n 3 Brazil                             82.4  7.55   7.57       7.44    7.51  7.54\n 4 Peru                               82.5  7.69   7.66       7.54    7.70  7.80\n 5 United States                      84.4  7.83   7.99       7.85    7.94  7.84\n 6 United States (Hawaii)             81.8  7.57   7.58       7.50    7.62  7.63\n 7 Indonesia                          82.6  7.65   7.57       7.42    7.49  7.63\n 8 China                              82.9  7.64   7.63       7.48    7.58  7.57\n 9 Costa Rica                         82.8  7.67   7.54       7.53    7.57  7.54\n10 Mexico                             80.9  7.46   7.38       7.23    7.43  7.38\n# ℹ 27 more rows\n```\n\n\n:::\n:::\n\n\n\n## Third Breadcrumb\n\nThe code creates a new data frame, coffee_haha, that summarizes the mean values of different coffee characteristics for each country of origin. It identifies and displays the top five countries with the highest average total cup points, along with their mean scores for aroma, flavor, aftertaste, acidity, and body.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_haha <- coffee_mod %>%\n  group_by(country_of_origin) %>% \n  summarize(total_points_mean = mean(total_cup_points), \n             aroma_mean = mean(aroma), \n             flavor_mean = mean(flavor), \n             aftertaste_mean = mean(aftertaste), \n             acidity_mean = mean(acidity), \n             body_mean = mean(body)\n             ) %>% \n  arrange(desc(total_points_mean)) %>% head(5)\n##\ncoffee_haha\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  country_of_origin total_points_mean aroma_mean flavor_mean aftertaste_mean\n  <fct>                         <dbl>      <dbl>       <dbl>           <dbl>\n1 Papua New Guinea               85.8       8.33        8.42            7.83\n2 Ethiopia                       85.5       7.90        8.01            7.89\n3 Japan                          84.7       7.75        7.75            7.75\n4 United States                  84.4       7.83        7.99            7.85\n5 Kenya                          84.3       7.79        7.78            7.71\n# ℹ 2 more variables: acidity_mean <dbl>, body_mean <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Fourth Breadcrumb\n\nThe code creates a new data frame, coffee_hihi, that ranks the average scores for total cup points, aroma, flavor, aftertaste, acidity, and body for the top five countries based on their mean scores. It removes the original mean value columns, resulting in a cleaner data frame focused solely on the ranks.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_hihi <- coffee_haha %>% \n  mutate(\n    total_points_rank = rank(total_points_mean),\n    aroma_rank = rank(aroma_mean),\n    flavor_rank = rank(flavor_mean),\n    aftertaste_rank = rank(aftertaste_mean),\n    acidity_rank = rank(acidity_mean),\n    body_rank = rank(body_mean)\n  ) %>% \n  select(-total_points_mean, -aroma_mean, -flavor_mean, -aftertaste_mean, -acidity_mean, -body_mean)\n##\ncoffee_hihi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  country_of_origin total_points_rank aroma_rank flavor_rank aftertaste_rank\n  <fct>                         <dbl>      <dbl>       <dbl>           <dbl>\n1 Papua New Guinea                  5          5           5               3\n2 Ethiopia                          4          4           4               5\n3 Japan                             3          1           1               2\n4 United States                     2          3           3               4\n5 Kenya                             1          2           2               1\n# ℹ 2 more variables: acidity_rank <dbl>, body_rank <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Fifth Breadcrumb\n\nThe code takes the coffee_hihi data frame and reshapes it into a long format, creating a new data frame called coffee_final. In coffee_final, each row corresponds to a specific rank for a coffee parameter (total points, aroma, flavor, etc.) associated with a country, which facilitates further analysis or visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_final <- coffee_hihi %>% \n  pivot_longer( \n    cols = c(total_points_rank, aroma_rank, flavor_rank, aftertaste_rank, acidity_rank, body_rank),\n    cols_vary = \"fastest\",\n    names_to = \"parameter\",\n    values_to = \"ranks\")\n##\ncoffee_final\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 3\n   country_of_origin parameter         ranks\n   <fct>             <chr>             <dbl>\n 1 Papua New Guinea  total_points_rank     5\n 2 Papua New Guinea  aroma_rank            5\n 3 Papua New Guinea  flavor_rank           5\n 4 Papua New Guinea  aftertaste_rank       3\n 5 Papua New Guinea  acidity_rank          5\n 6 Papua New Guinea  body_rank             4\n 7 Ethiopia          total_points_rank     4\n 8 Ethiopia          aroma_rank            4\n 9 Ethiopia          flavor_rank           4\n10 Ethiopia          aftertaste_rank       5\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n\n## BUILDING THE GRAPH\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggbump)\n\nggplot(coffee_final, aes(x = parameter, y = ranks, color = country_of_origin, group = country_of_origin)) +\n  geom_bump(size = 1) +  \n  geom_point(size = 4) +  \n  scale_x_discrete(\n    limits = c(\"acidity_rank\", \"aftertaste_rank\", \"aroma_rank\", \"body_rank\", \"total_points_rank\", \"flavor_rank\"),\n    labels = c(\"Acidity\", \"Aftertaste\", \"Aroma\", \"Body\", \"Total\", \"Flavor\")\n  ) + \n  labs(title = \"Coffee Parameter Ranks by Country of Origin\",\n       x = \"Coffee Parameters\",\n       y = \"Rank\",\n       color = \"Country of Origin\") +\n  scale_color_manual(values = c(\n    \"Ethiopia\" = \"#00AFBB\", \n    \"Japan\" = \"#E7B800\", \n    \"Kenya\" = \"#FC4E07\", \n    \"Papua New Guinea\" = \"#7D3C98\", \n    \"United States\" = \"#4CAF50\"\n  )) +  # Define colors for each country\n  theme_minimal() +  # Use a minimal theme\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n# Lets talk about this graph!\n\n## 1) What is this graph ?\n\nthis is a BUMP CHART ! A bump chart is used to visualize changes in rank over time or across different categories. In this case, it shows how the rank of different countries' coffee changes across various coffee attributes.\n\n## 2)Identify the variables used for various geometrical aspects (x, y, fill…). Name the variables appropriately.\n\n1.  **X-axis :** Shows the **coffee attributes** (like aroma, flavor, acidity) along the horizontal line.\n\n2.  **Y-axis:** Shows the **rank** of each country’s coffee for each attribute on the vertical line (lower rank means better performance).\n\n3.  **Color :** Each **country** (like Ethiopia, Japan, Kenya) gets a different color, so it's easy to tell them apart in the chart.\n\n4.  **Group:** This groups the data by **country**, making sure the lines connect the rank points for the same country across attributes.\n\n5.  **Line Thickness :**Sets the thickness of the lines that show how a country's rank changes from one attribute to another.\n\n6.  **Point Size :** Controls the size of the points that represent each country’s rank on the chart.\n\n7.  **Point Shape :** This gives the points a specific shape with a filled color and a border.\n\n## 3) What research activity might have been carried out to obtain the data graphed here? Provide some details.\n\nThe data shown in the bump chart likely came from a detailed coffee-tasting research process, known as **cupping**. Researchers would have gathered coffee samples from different countries, such as Ethiopia and Kenya, and evaluated them based on key attributes like aroma, flavor, and aftertaste. Expert tasters, or **cuppers**, rated each coffee, and these ratings were compared to rank the coffees for each attribute. It’s fascinating to imagine how the taste of coffee, grown in different environments and processed in unique ways, can be quantified and ranked. This chart reflects the diversity and complexity of global coffee, turning sensory experiences into data that tells a story of flavor, quality, and origin. or maybe a coffee lover like me did all this as a fun thing !\n\n## 4)What might have been the Hypothesis/Research Question to which the response was Chart?\n\n**\"How do coffees from different countries rank across various sensory attributes?\"**\n\nor\n\n**\"Is there a difference in the quality and ranking of coffee attributes (such as aroma, flavor, acidity) across countries like Ethiopia, Kenya, and Japan?\"**\n\nThis hypothesis would drive the researchers to compare coffee from multiple countries based on specific attributes, resulting in a visualization that shows how each country’s coffee performs across different qualities.\n\n# My story\n\nI found this dataset really interesting because I used to be a big coffee fan—unfortunately, I can't drink it anymore due to medical reasons. Still, coffee is such a fascinating creation. Working with this bump chart brought back memories of my love for it. At first, I ran into an error while trying to create the chart, but after some troubleshooting, I realized I needed to add `group=country` for it to work properly. It was a satisfying fix and made the chart even more interesting to look at.\n\nThis bump chart compares coffee rankings from different countries across various attributes like aroma and flavor. The `x` axis represents the coffee attributes, while the `y` axis shows the rank (lower is better). Each country is color-coded, and lines connect the ranks for each attribute, showing how each country’s coffee performs across all attributes. You can follow each country's line to see how its rank changes attribute by attribute.\n\nlatest edit:This dataset sucked me up but it works. thankyou.FINALLYYY. I had to do it thrice to get it right. \n",
    "supporting": [
      "index2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}