{
  "hash": "6ac96dcbc640cdca83e5d422f977ac18",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ikea (A2)\"\nauthor: \"harvallav\"\n---\n\n\n\n# IKEA FURNITURE\n\n## Introduction\n\nThis dataset provides an insightful look into IKEA furniture prices, thoughtfully modified to allow for smooth analysis and visualization. It covers a range of categories and includes details like availability in different colors, offering a refined glimpse into IKEA’s product offerings.\n\n### INSTALLING R packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n:::\n\n\n\nTo begin, download the IKEA modified dataset and ensure it is saved in your working directory. Once ready, you can seamlessly read the file into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nikea_modified <- read_delim(\"../../data /ikea_modified.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3211 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (8): name, category, old_price, link, other_colors, short_description, d...\ndbl (5): item_id, depth, height, width, category_total\nnum (1): price\nlgl (1): sellable_online\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nikea_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,211 × 15\n    item_id name     category price old_price sellable_online link  other_colors\n      <dbl> <chr>    <chr>    <dbl> <chr>     <lgl>           <chr> <chr>       \n 1 29123958 MINNEN   Beds (2…  3950 SR 445    TRUE            http… No          \n 2 49278341 BRIMNES  Beds (2…  8950 SR 925    TRUE            http… No          \n 3 50461230 SMÅGÖRA  Beds (2…  5950 No old p… TRUE            http… No          \n 4 89326463 PLATSA   Beds (2… 21110 SR 2,205  TRUE            http… No          \n 5 50468953 VATTVIK… Beds (2…  9950 No old p… TRUE            http… No          \n 6 69326609 SLÄKT    Beds (2…  5400 No old p… FALSE           http… No          \n 7 59099136 BRIMNES  Beds (2…  7950 No old p… TRUE            http… Yes         \n 8 40395245 NEIDEN   Beds (2…   990 No old p… TRUE            http… No          \n 9 69277307 LEIRVIK  Beds (2… 11950 No old p… TRUE            http… Yes         \n10 70395239 NEIDEN   Beds (2…  1990 No old p… TRUE            http… No          \n# ℹ 3,201 more rows\n# ℹ 7 more variables: short_description <chr>, designer <chr>, depth <dbl>,\n#   height <dbl>, width <dbl>, price_usd <chr>, category_total <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ikea_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,211\nColumns: 15\n$ item_id           <dbl> 29123958, 49278341, 50461230, 89326463, 50468953, 69…\n$ name              <chr> \"MINNEN\", \"BRIMNES\", \"SMÅGÖRA\", \"PLATSA\", \"VATTVIKEN…\n$ category          <chr> \"Beds (208)\", \"Beds (208)\", \"Beds (208)\", \"Beds (208…\n$ price             <dbl> 3950, 8950, 5950, 21110, 9950, 5400, 7950, 990, 1195…\n$ old_price         <chr> \"SR 445\", \"SR 925\", \"No old price\", \"SR 2,205\", \"No …\n$ sellable_online   <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRU…\n$ link              <chr> \"https://www.ikea.com/sa/en/p/minnen-ext-bed-frame-w…\n$ other_colors      <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"Ye…\n$ short_description <chr> \"Ext bed frame with slatted bed base, 80x200 cm\", \"B…\n$ designer          <chr> \"IKEA of Sweden/Tina Christensen\", \"IKEA of Sweden/K…\n$ depth             <dbl> NA, 54, NA, 40, 83, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ height            <dbl> NA, 110, 79, 43, 86, NA, 111, NA, NA, NA, NA, NA, NA…\n$ width             <dbl> 85, 96, 66, 140, 92, 91, 146, 94, 188, 144, 154, 144…\n$ price_usd         <chr> \"106,650\", \"241,650\", \"160,650\", \"569,970\", \"268,650…\n$ category_total    <dbl> 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 20…\n```\n\n\n:::\n:::\n\n\n\n# IKEA Dataset Dictionary\n\nThis dataset contains 3,211 rows and 15 columns, providing detailed information about IKEA furniture items, including prices, categories, and other attributes.\n\n## Columns\n\n### Qualitative Variables\n\n1.  **name** (<chr>): Name of the furniture item.\\\n    *Example*: \"MINNEN\", \"BRIMNES\"\n\n2.  **category** (<chr>): Category of the furniture item, with the total number of items in each category in parentheses.\\\n    *Example*: \"Beds (208)\"\n\n3.  **old_price** (<chr>): Previous price of the item (if applicable), otherwise \"No old price\".\\\n    *Example*: \"SR 445\", \"No old price\"\n\n4.  **sellable_online** (<lgl>): Indicates whether the item is available for online purchase (TRUE/FALSE).\\\n    *Example*: TRUE, FALSE\n\n5.  **link** (<chr>): URL to the product page on IKEA's website.\\\n    *Example*: \"[https://www.ikea.com/sa/en/p/minnen-ext-bed-frame-with-slatted-bed-base-white-s29123958/\"](https://www.ikea.com/sa/en/p/minnen-ext-bed-frame-with-slatted-bed-base-white-s29123958/%22)\n\n6.  **other_colors** (<chr>): Indicates whether the product is available in other colors (Yes/No).\\\n    *Example*: \"No\", \"Yes\"\n\n7.  **short_description** (<chr>): Brief description of the product, including dimensions.\\\n    *Example*: \"Ext bed frame with slatted bed base, 80x200 cm\"\n\n8.  **designer** (<chr>): Name(s) of the product designer(s).\\\n    *Example*: \"IKEA of Sweden/Tina Christensen\"\n\n### Quantitative Variables\n\n1.  **item_id** (<dbl>): Unique identifier for each product.\\\n    *Example*: 29123958, 49278341\n\n2.  **price** (<dbl>): Current price of the furniture item.\\\n    *Example*: 3950, 8950\n\n3.  **depth** (<dbl>): Depth of the item in centimeters (if available).\\\n    *Example*: 54, 83\n\n4.  **height** (<dbl>): Height of the item in centimeters (if available).\\\n    *Example*: 110, 79\n\n5.  **width** (<dbl>): Width of the item in centimeters.\\\n    *Example*: 85, 96\n\n6.  **price_usd** (<chr>): Price of the item converted to USD.\\\n    *Example*: \"106,650\", \"241,650\"\n\n7.  **category_total** (<dbl>): Total number of items in the category.\\\n    *Example*: 208\n\n# Observations\n\n## Observation Table\n\n| **Observation** | **Details** |\n|------------------------------------|------------------------------------|\n| **Wide Range of Products** | The dataset includes many different types of furniture, like beds and storage units, showing IKEA's large variety of products. |\n| **Different Price Levels** | The prices vary a lot between products. Some items also show old prices, which might mean there were discounts or price changes. |\n| **Online Availability** | Most items can be bought online, but a few cannot, suggesting that not everything is available for online purchase. |\n| **Focus on Design** | Each item lists the designer's name, which shows that IKEA puts effort into creating stylish, well-designed products. |\n| **Product Sizes** | The sizes (depth, height, width) are available for most items, but some are missing, meaning not all products have full size details. |\n| **Color Choices** | Some products come in different colors, while others do not, showing that IKEA offers customization options for certain items. |\n| **International Appeal** | The prices are also shown in USD, which means the products are available in different countries, making IKEA a global brand. |\n\n# LET'S REPLICATE THE DATA SET\n\nHow does the price distribution of IKEA furniture vary across different categories, and is there a relationship between price and the availability of multiple color options?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggridges)\n\nggplot(ikea_modified, aes(x = price, y = category, fill = other_colors)) + \n  geom_density_ridges(alpha = 0.4, scale = 1) + \n  scale_x_log10(labels = scales::dollar) + \n  labs(x = \"Price (USD)\", y = \"\", fill = \"Are they available in other colors?\") + \n  scale_fill_manual(values = c(\"No\" = \"purple\", \"Yes\" = \"green\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPicking joint bandwidth of 0.182\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Let's Break down and understand this graph in detail\n\n### 1)So what type of graph is this ?\n\n## A DENSITY PLOT !\n\nA density plot is a smooth, visually appealing way to show how data is spread out over a range of values. Imagine you have a bunch of points (like test scores or heights), and you want to see where most of them are concentrated. Instead of showing each point individually, a density plot draws a smooth curve over the data. The taller the curve in certain areas, the more data points there are in that range. It’s like a more polished version of a histogram, but without the jagged bars—it gives you a clear picture of the \"shape\" of your data and where the values tend to cluster.\n\n## 2) What variables have been used in the chart?\n\nThe chart uses three main variables:\n\n-   **Price**: Shown on the x-axis, this represents the cost of items in USD.\n\n-   **Category**: Displayed on the y-axis, this shows different product categories.\n\n-   **Other colors**: This determines the fill color of the ridgelines, showing whether an item comes in multiple colors (\"Yes\") or only one color (\"No\").\n\n## 3)What can you say about the scale on the X-axis?\n\nThe x-axis in this chart is using something called a **logarithmic scale**. Normally, on a regular scale, the numbers are spaced out evenly, like 1, 2, 3, 4, and so on. But with a **logarithmic scale**, the numbers grow much faster, like 10, 100, 1,000. This is helpful when the data has a big range of values, like prices that can be very low or very high.\n\nBy using this scale, we **compress the larger numbers** so they don’t take up too much space, and **spread out the smaller numbers** so we can see the patterns more clearly. If we didn’t do this, the really expensive items might make the cheaper ones hard to spot on the chart.\n\n## 4)What can you say about prices of items that are available in a single color versus those available in more than one color?\n\nBoth types of items—whether they come in one color or many—can have prices that overlap. But items with more color options usually have a wider spread of prices. Items available in more than one color (green) tend to have a wider range of prices, possibly because they offer more models or features. In contrast, single-color items (purple) usually stick to a narrower price range, likely reflecting more specific or niche products.\n\n## 5) What is a good hypothesis to interpret the double-humped nature of some of the curves?\n\nA good hypothesis for the double-humped (bimodal) curves is that there are two distinct groups of products within the same category. This could be because the category includes both low-end and high-end versions, older discounted models and newer premium ones, or basic and advanced configurations. Essentially, the two peaks likely represent different product tiers or versions.\n\nOh here is another kind of a graph which is a VIOLIN PLOT that I came across and I found it cool so I thought Why not make it here? It also has a box plot in the middle .\\\nThe width of the \"violin\" at any point represents the **density** of the data at that price range. Wider sections indicate where more data points (prices) are concentrated.The **narrower** parts show where there are fewer data points.The violin is symmetric, so the data on both sides is the same.\\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_violin(price ~ category, data = ikea_modified, fill = ~ other_colors, \n          draw_quantiles = c(0.25, 0.5, 0.75), alpha = 0.6) %>%\n  gf_boxplot(price ~ category, data = ikea_modified, width = 0.1, fill = \"white\", color = \"black\", alpha = 0.3) %>%\n  gf_refine(scale_y_log10(labels = scales::dollar)) %>%\n  gf_labs(x = \"Category\", y = \"Price (USD)\", fill = \"Available in other colors?\") %>%\n  gf_refine(scale_fill_manual(values = c(\"No\" = \"purple\", \"Yes\" = \"green\"))) %>%\n  gf_theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## My Story\n\nI finally got this graph to work after countless trials and errors with the other datasets. It felt like I visited an IKEA store in my class for the first time — a bit of a mess at first, but then surprisingly impressive. IKEA’s a smart brand. It looks cost-efficient on the surface, but when you take a step back, you realize it’s not all that budget-friendly. Still, I had fun working with the dataset. Since something was finally clicking, I decided to experiment a bit more and created a violin plot with a box and whiskers.\n",
    "supporting": [
      "index3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}